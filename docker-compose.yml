services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: inmobiliaria
      POSTGRES_PASSWORD: Wkrfqt2738
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U inmobiliaria -d real_estate_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: ["./docker-entrypoint.sh"]
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "real_estate_management.wsgi:application"]

  # Celery Worker
  celery:
    build: .
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - .:/app
    depends_on:
      - db
      - redis
      - web
    command: celery -A real_estate_management worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - .:/app
    depends_on:
      - db
      - redis
      - web
    command: celery -A real_estate_management beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data: